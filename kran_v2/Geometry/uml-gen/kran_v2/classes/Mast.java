package kran_v2.classes;

import java.util.*;
import javax.annotation.Generated;

@Generated(value = { "de.iils.dc43.scriptrule.generator.JavaGenerator" }, date = "2014-11-24T15:37:12.278+0100")
@SuppressWarnings("all")
public interface Mast extends geometry.Component {
	
	public static final String MASTSCHUSS__PROP = "mastschuss";
	public org.eclipse.uml2.uml.Property umlPropMastschuss();
	public List<org.eclipse.uml2.uml.Slot> umlSlotMastschuss();
	/**
	 * <p>Gets the list of wrapper objects for the instances linked by the multiplicity-many property <b>mastschuss</b>.</p>
	 * <p>Changes to this list will be reflected in the UML model, so it can be used to easily link (or unlink) instances via this property by adding (removing) their <b>gittermastschuss.classes.Mastschuss</b> wrappers to (from) this list.</p>
	 */
	public List<gittermastschuss.classes.Mastschuss> getMastschuss();
	public static final String ANFANG_MAST__PROP = "anfangMast";
	public org.eclipse.uml2.uml.Property umlPropAnfangMast();
	public org.eclipse.uml2.uml.Slot umlSlotAnfangMast();
	public AnfangMast getAnfangMast();
	public void setAnfangMast(AnfangMast anfangMast);
	public static final String POSITION__PROP = "position";
	public org.eclipse.uml2.uml.Property umlPropPosition();
	public org.eclipse.uml2.uml.Slot umlSlotPosition();
	public geometry.Position getPosition();
	public void setPosition(geometry.Position position);
	public static final String LAENGE__PROP = "laenge";
	public org.eclipse.uml2.uml.Property umlPropLaenge();
	public org.eclipse.uml2.uml.Slot umlSlotLaenge();
	public Double getLaenge();
	public void setLaenge(Double laenge);
	public static final String ENDE_MAST__PROP = "endeMast";
	public org.eclipse.uml2.uml.Property umlPropEndeMast();
	public org.eclipse.uml2.uml.Slot umlSlotEndeMast();
	public EndeMast getEndeMast();
	public void setEndeMast(EndeMast endeMast);
	public static final String BREITE1__PROP = "breite1";
	public org.eclipse.uml2.uml.Property umlPropBreite1();
	public org.eclipse.uml2.uml.Slot umlSlotBreite1();
	public Double getBreite1();
	public void setBreite1(Double breite1);
	public static final String VOLUMEN__PROP = "volumen";
	public org.eclipse.uml2.uml.Property umlPropVolumen();
	public org.eclipse.uml2.uml.Slot umlSlotVolumen();
	public Double getVolumen();
	public void setVolumen(Double volumen);
	public static final String SCHWERPUNKTX__PROP = "schwerpunktx";
	public org.eclipse.uml2.uml.Property umlPropSchwerpunktx();
	public org.eclipse.uml2.uml.Slot umlSlotSchwerpunktx();
	public Double getSchwerpunktx();
	public void setSchwerpunktx(Double schwerpunktx);
	public static final String SCHWERPUNKTY__PROP = "schwerpunkty";
	public org.eclipse.uml2.uml.Property umlPropSchwerpunkty();
	public org.eclipse.uml2.uml.Slot umlSlotSchwerpunkty();
	public Double getSchwerpunkty();
	public void setSchwerpunkty(Double schwerpunkty);
	public static final String SCHWERPUNKTZ__PROP = "schwerpunktz";
	public org.eclipse.uml2.uml.Property umlPropSchwerpunktz();
	public org.eclipse.uml2.uml.Slot umlSlotSchwerpunktz();
	public Double getSchwerpunktz();
	public void setSchwerpunktz(Double schwerpunktz);
	public static final String GSCHWERPUNKTX__PROP = "gschwerpunktx";
	public org.eclipse.uml2.uml.Property umlPropGschwerpunktx();
	public org.eclipse.uml2.uml.Slot umlSlotGschwerpunktx();
	public Double getGschwerpunktx();
	public void setGschwerpunktx(Double gschwerpunktx);
	public static final String GSCHWERPUNKTY__PROP = "gschwerpunkty";
	public org.eclipse.uml2.uml.Property umlPropGschwerpunkty();
	public org.eclipse.uml2.uml.Slot umlSlotGschwerpunkty();
	public Double getGschwerpunkty();
	public void setGschwerpunkty(Double gschwerpunkty);
	public static final String GSCHWERPUNKTZ__PROP = "gschwerpunktz";
	public org.eclipse.uml2.uml.Property umlPropGschwerpunktz();
	public org.eclipse.uml2.uml.Slot umlSlotGschwerpunktz();
	public Double getGschwerpunktz();
	public void setGschwerpunktz(Double gschwerpunktz);
	public static final String GSCHWERPUNKTXK__PROP = "gschwerpunktxk";
	public org.eclipse.uml2.uml.Property umlPropGschwerpunktxk();
	public org.eclipse.uml2.uml.Slot umlSlotGschwerpunktxk();
	public Double getGschwerpunktxk();
	public void setGschwerpunktxk(Double gschwerpunktxk);
	public static final String GSCHWERPUNKTYK__PROP = "gschwerpunktyk";
	public org.eclipse.uml2.uml.Property umlPropGschwerpunktyk();
	public org.eclipse.uml2.uml.Slot umlSlotGschwerpunktyk();
	public Double getGschwerpunktyk();
	public void setGschwerpunktyk(Double gschwerpunktyk);
	public static final String GSCHWERPUNKTZK__PROP = "gschwerpunktzk";
	public org.eclipse.uml2.uml.Property umlPropGschwerpunktzk();
	public org.eclipse.uml2.uml.Slot umlSlotGschwerpunktzk();
	public Double getGschwerpunktzk();
	public void setGschwerpunktzk(Double gschwerpunktzk);
	public static final String EFFEKTIVELAENGE__PROP = "effektivelaenge";
	public org.eclipse.uml2.uml.Property umlPropEffektivelaenge();
	public org.eclipse.uml2.uml.Slot umlSlotEffektivelaenge();
	public Double getEffektivelaenge();
	public void setEffektivelaenge(Double effektivelaenge);
	public static final String TYP__PROP = "typ";
	public org.eclipse.uml2.uml.Property umlPropTyp();
	public org.eclipse.uml2.uml.Slot umlSlotTyp();
	public Double getTyp();
	public void setTyp(Double typ);
	public static final String ABSOLUTEPOSITION__PROP = "absoluteposition";
	public org.eclipse.uml2.uml.Property umlPropAbsoluteposition();
	public org.eclipse.uml2.uml.Slot umlSlotAbsoluteposition();
	public geometry.Position getAbsoluteposition();
	public void setAbsoluteposition(geometry.Position absoluteposition);
	public static final String EFFEKTIVEHOEHE__PROP = "effektivehoehe";
	public org.eclipse.uml2.uml.Property umlPropEffektivehoehe();
	public org.eclipse.uml2.uml.Slot umlSlotEffektivehoehe();
	public Double getEffektivehoehe();
	public void setEffektivehoehe(Double effektivehoehe);
	public Mast mastschuss_(gittermastschuss.classes.Mastschuss... instancesToLink);
	public Mast mastschuss_(List<gittermastschuss.classes.Mastschuss> instancesToLink);
	public Mast mastschuss_add_(gittermastschuss.classes.Mastschuss instanceToLink);
	public Mast anfangMast_(AnfangMast anfangMast);
	public Mast position_(geometry.Position position);
	public Mast laenge_(Double laenge, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast endeMast_(EndeMast endeMast);
	public Mast breite1_(Double breite1, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast volumen_(Double volumen, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast schwerpunktx_(Double schwerpunktx, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast schwerpunkty_(Double schwerpunkty, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast schwerpunktz_(Double schwerpunktz, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast gschwerpunktx_(Double gschwerpunktx, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast gschwerpunkty_(Double gschwerpunkty, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast gschwerpunktz_(Double gschwerpunktz, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast gschwerpunktxk_(Double gschwerpunktxk, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast gschwerpunktyk_(Double gschwerpunktyk, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast gschwerpunktzk_(Double gschwerpunktzk, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast effektivelaenge_(Double effektivelaenge, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast typ_(Double typ, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast absoluteposition_(geometry.Position absoluteposition);
	public Mast effektivehoehe_(Double effektivehoehe, org.eclipse.uml2.uml.Stereotype... slotStereos);
	public Mast shape_(geometry.Shape shape);
	public Mast existingComponent_(geometry.ExistingComponent existingComponent);
	public Mast color_(geometry.Color color);
	public Mast primitiveShape_(geometry.Shape primitiveShape);
	public Mast userDefinedFeature_(geometry.UserDefinedFeature userDefinedFeature);
	public Mast sub_(geometry.TopologyElement... instancesToLink);
	public Mast sub_(List<geometry.TopologyElement> instancesToLink);
	public Mast sub_add_(geometry.TopologyElement instanceToLink);
}
